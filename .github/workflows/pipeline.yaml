name: Deploy Frontend

on:
  push:
    branches: [dev, qa, uat, master]

jobs:
  deploy-frontend:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Cache Minikube
      id: cache-minikube
      uses: actions/cache@v3
      with:
        path: |
          /usr/local/bin/minikube
          /tmp/minikube-cache
        key: minikube-${{ runner.os }}

    - name: Install Minikube if not cached
      if: steps.cache-minikube.outputs.cache-hit != 'true'
      run: |
        curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
        sudo install minikube-linux-amd64 /usr/local/bin/minikube

    - name: Start Minikube
      run: |
        minikube start --driver=docker --container-runtime=containerd

    - name: Build Frontend Docker image
      run: |
        eval $(minikube docker-env)
        docker build -t counter-frontend:${{ github.sha }} .

    - name: Deploy frontend to namespace
      run: |
        kubectl create namespace ${{ github.ref_name }} --dry-run=client -o yaml | kubectl apply -f -
        kubectl apply -f k8s/ -n ${{ github.ref_name }}
        kubectl set image deployment/counter-frontend-deployment \
          frontend-container=counter-frontend:${{ github.sha }} -n ${{ github.ref_name }} || true
        
    - name: Verify frontend deployment
      run: |
        kubectl rollout status deployment/counter-frontend-deployment -n ${{ github.ref_name }} --timeout=300s
        echo "Frontend deployed to ${{ github.ref_name }} namespace"